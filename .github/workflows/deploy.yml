# This is a basic workflow to help you get started with Actions

name: Run Server Deployment

# Controls when the workflow will run
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    if: ${{ !github.event.pull_request }}
    runs-on: ubuntu-latest
    name: "Deploy to Department VM"
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy-key.pem
          chmod 600 ~/.ssh/deploy-key.pem
          cat >>~/.ssh/config <<END
          Host my-vm
            HostName $SSH_IP
            User $SSH_USER
            IdentityFile ~/.ssh/deploy-key.pem
            StrictHostKeyChecking no
            Port $SSH_PORT
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_IP: ${{ secrets.SSH_IP }}
          SSH_PORT: ${{ secrets.SSH_PORT }}

      - name: Deploy site
        run: ssh my-vm 'nohup ~/redeploy-site.sh'

      - name: Discord Notification
        # run: ssh my-vm 'curl ${{ secrets.DISCORD_WEBHOOK }} -d "content=$(docker ps --format '{{ json .}}' | jq -r '"\(.Names) | \(.State) | \(.Status) | \(.Ports)"')"'
        run: ssh my-vm 'curl ${{ secrets.DISCORD_WEBHOOK }} -d "content=$(docker ps --format '{{ json .}}')\nðŸš€ Deployment Successful"'